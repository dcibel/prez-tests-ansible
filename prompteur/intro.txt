Un firefox en plein écran avec le slide des sponsors

Mais où sont les slides ???
---------------------------

>> On se présente, dire ce que l'on fait comme métier.

Bonjour, je m'appelle.....
Nous travaillons à installer, déployer des infrastructures et des services sur des plate-formes que l'on hébergent. Nous assurons le maintien en condition opérationnelle de ces services.

La présentation est intitulée "Développement guidé par les tests de rôles ansible.".

Tout d'abord le slide des sponsors. Merci à eux.

Pascal, la suite s'il te plait.
Ah ... t'as le réseau ? Oui ?
Désolé, notre serveur server1 ne répond.


"Les slides ne sont pas déployés ?? Pascal ! Joue ansible s'il te plait" :

>> Pascal lance un xterm (l'écran est splitté en deux)
#> cd demo
#> ansible-playbook -i inventory playbook.yml

(le run ansible se déroule)

(les nouveaux slides apparaissent sur l'écran splitté en deux)

>> pascal zoome sur les slides

Ok on va pouvoir commencer. Donc merci aux sponsors.
Vu que c'est une conférence qui va parler d'ansible revenons un peu sur que Pascal vient de faire.

ansible
-------
Nous venons de déployer les slides sur le serveur via ansible.
Les slides sont disponibles sur la machine appelée server1.
Est-ce que l'on peut voir ce que tu as tappé ?

>> pascal splitte en deux son écran
>> zoome sur le terminal
>> augmente la police de caractère
>> et remonte l'historique de son terminal jusqu'à la ligne suivante

#> ansible-playbook -i inventory playbook.yml

Pascal, est-ce que tu peux nous montrer le fichier *inventory* ?

#> cat inventory
server1

Ok. donc ce fichier liste les machines de notre plate-forme.
Actuellement, il n'y en a qu'une.
server1

Ainsi, nous avons joué ansible sur la machine server1.
Regardons le fichier playbook.yml qui était un paramètre de la commande

#> cat playbook.yml

Ok c'est du yaml, il est court.

- hosts: all  =>  signifie que l'on va jouer la suite
                    pour toutes les machines de l'inventaire 

  roles:      =>  2 roles sont listées httpserver et slides, ce sont les
                  roles que l'on va appliquer sur le serveur
    - httpserver
    - slides
              
Pascal, on peut regarder le rôle httpserver afin de savoir ce qu'il fait.
Ok, il installe le server nginx et s'assure qu'il est démarré.
 
On regarde de nouveau la ligne de commande 
Donc la commande ansible-playbook a joué ce playbook sur l'inventaire.

Regardons maintenant le "run ansible"

<< RUN ANSIBLE >>

On commente on lit les noms des tâches 
ok

On peut revoir le navigateur ?

(les slides apparaissent sur l'écran splitté en deux)

>> on passe au slide ansible

Tiens j'ai une deuxième machine sur laquelle j'aimerais déployer les slides.

>> Pascal zoome sur le terminal

On peut se connecter en ssh dessus ?

#> ssh server2 # doit-on changer le username vagrant ???
#> exit

Y a t'il un serveur web qui écoute sur la machine ?

#> ssh server2 
#> telnet localhost 80

Ok donc on va pouvoir jouer ansible sur cette machine.

>> Pascal édite le fichier inventory : ajout de server2

On rejoue ansible-playbook :

#> ansible-playbook -i inventory playbook.yml

<< RUN ANSIBLE >>

ok: sur le server1
changed: sur le server2

On remarque que rien ne se passe sur le server1, et que l'on installe/démarre nginx puis déploie les slides sur le server2

rien ne se passe sur le server1

#> xdg-open http://server2

>> Pascal va sur firefox en pleine écran et on visualise le slide sponsors

Les slides sont bien déployés sur ce serveur.

>> Pascal ferme les slides sur le server2
>> On arrive sur le slide ansible.

Ok donc nous venons d'installer nginx sur la machine server1, le démarrer puis deployer les slides.
Dans un deuxième temps, nous avons fait la même chose sur le server2 

Voila la courte introduction d'ansible. J'espère que c'était clair pour vous.
Passons à la suite.

Introduction
------------

Nous utilisons ansible quotidiennement pour installer et maintenir nos serveurs. Nous gérons environ 200 serveurs avec une trentaine de rôles ansible.
Sur 9 plate-formes distinctes pour des clients différents.


Nous ré-utilisons les rôles ansible pour différents clients, l'ajout d'une fonctionnalités peut entrainer des régressions.

comment modifier un rôle sans avoir peur de casser une autre plate-forme ?

L'approche TDD nous permet de sécuriser le déploiement de nos rôles ansible en couvrant la non-régression des rôles.
Cette approche nous permet aussi de nous focaliser sur les fonctionnalités nécessaires à apporter dans un rôle.

>> slide TDD

Ainsi, pour ceux qui ne connaissent pas le développement guidé par les tests.

On veut tester sur notre poste, le code qui configure nos serveurs de production.

>> slide plomberie

>> luc commente le slide 
Nous avons mis en place un outil qui permet de tester nos rôles ansible.
Cet outil va s'occuper :
  * de créer un containeur docker
  * et de lancer ansible dans ce containeur
  * puis d'éxécuter les tests bash_unit de ce containeur 

J'insiste pour dire que les tests sont joués dans un containeur sur le poste de développement. 

Maintenant, nous allons vous montrer le développement guidé par les tests d'un role ansible.
